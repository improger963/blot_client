// src/app/ProtectedRoute.tsx

import { Navigate, Outlet } from 'react-router-dom';
import { useAuthStore } from '../store/authStore';

/**
 * @description Компонент-обертка для защиты маршрутов.
 * 1. Показывает заглушку во время первоначальной проверки сессии, чтобы избежать "мигания" экрана.
 * 2. Если сессия проверена и пользователь не аутентифицирован, перенаправляет его на страницу входа.
 * 3. Если пользователь аутентифицирован, отображает запрошенную страницу.
 */
export const ProtectedRoute = () => {
    // Получаем актуальное состояние из нашего стора аутентификации.
    const { isAuthenticated, status } = useAuthStore();

    // Пока идет первоначальная проверка токена (`checkAuthStatus`), показываем заглушку.
    // Это критически важно для хорошего UX, чтобы авторизованный пользователь
    // при перезагрузке страницы не увидел на мгновение страницу логина.
    if (status === 'loading' || status === 'idle') {
        // В реальном приложении здесь был бы красивый полноэкранный прелоадер (спиннер).
        return (
            <div className="flex h-screen items-center justify-center">
                <p>Проверка сессии...</p>
            </div>
        );
    }

    // Если проверка завершена и пользователь НЕ аутентифицирован,
    // принудительно отправляем его на страницу входа.
    // `replace` убирает из истории предыдущую (защищенную) страницу.
    if (!isAuthenticated) {
        return <Navigate to="/login" replace />;
    }

    // Если все проверки пройдены, `Outlet` рендерит тот дочерний компонент,
    // который соответствует текущему URL (например, HomePage для пути '/').
    return <Outlet />;
};