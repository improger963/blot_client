// src/pages/LoginPage.tsx

import { useMutation } from '@tanstack/react-query';
import { Navigate } from 'react-router-dom';
import { useEffect } from 'react';
import { useAuthStore } from '../store/authStore';
import { loginWithTelegram, getCsrfCookie } from '../services/authService';
import { useTelegram } from '../hooks/useTelegram';
import { DevLoginForm } from '../components/DevLoginForm';
import { motion } from 'framer-motion';
import { TextSkeleton, AvatarSkeleton, InputSkeleton } from '../components/ui';

/**
 * @description –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏.
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–∫—Ä—É–∂–µ–Ω–∏–µ (Telegram –∏–ª–∏ –±—Ä–∞—É–∑–µ—Ä) –∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç
 * —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Å—Ü–µ–Ω–∞—Ä–∏–π –≤—Ö–æ–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–æ–ª–Ω—É—é –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 * –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ª–æ–≥–∏–Ω–∞ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ cookie.
 */
export const LoginPage = () => {
  const { isAuthenticated } = useAuthStore();
  const { isReady, isTelegramEnv, initData, user: telegramUser } = useTelegram();

  const { mutate, isPending, error } = useMutation({
    mutationFn: async (dataToLogin: string) => {
      await getCsrfCookie();
      return loginWithTelegram(dataToLogin);
    },
    onSuccess: () => {
      window.location.href = '/';
    },
  });

  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—Ö–æ–¥–∞, –µ—Å–ª–∏ –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏ Telegram.
  useEffect(() => {
    if (isReady && isTelegramEnv && initData && !isPending && !isAuthenticated) {
      mutate(initData);
    }
  }, [isReady, isTelegramEnv, initData, isPending, isAuthenticated, mutate]);

  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é.
  if (isAuthenticated) {
    return <Navigate to="/" replace />;
  }

  // –ü–æ–∫–∞ —Ö—É–∫ `useTelegram` –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–∏–ª –æ–∫—Ä—É–∂–µ–Ω–∏–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–∫–µ–ª–µ—Ç–æ–Ω.
  if (!isReady) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-background to-surface/30 flex items-center justify-center p-4">
        <div className="w-full max-w-md space-y-6">
          <div className="text-center space-y-4">
            <AvatarSkeleton className="h-16 w-16 mx-auto" />
            <TextSkeleton className="w-48 h-8 mx-auto" />
            <TextSkeleton className="w-64 h-4 mx-auto" />
          </div>
          <InputSkeleton />
          <InputSkeleton />
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-background to-surface/30 flex items-center justify-center p-4">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="w-full max-w-md"
      >
        {/* –°—Ü–µ–Ω–∞—Ä–∏–π ‚Ññ1: –ú—ã –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏ Telegram (–ü–†–û–î–ê–ö–®–ï–ù) */}
        {isTelegramEnv && (
          <motion.div
            initial={{ opacity: 0, scale: 0.9 }}
            animate={{ opacity: 1, scale: 1 }}
            className="text-center space-y-6"
          >
            {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ª–æ–≥–æ—Ç–∏–ø */}
            <div className="flex justify-center">
              <motion.div
                initial={{ scale: 0, rotate: -180 }}
                animate={{ scale: 1, rotate: 0 }}
                transition={{ type: 'spring', stiffness: 200 }}
                className="flex h-20 w-20 items-center justify-center rounded-2xl bg-gradient-to-br from-primary to-primary-glow shadow-lg shadow-primary/25"
              >
                <span className="text-2xl font-bold text-white">L</span>
              </motion.div>
            </div>

            {/* –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ */}
            <div className="space-y-2">
              <h1 className="text-2xl font-bold bg-gradient-to-r from-foreground to-muted-foreground bg-clip-text text-transparent">
                –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!
              </h1>
              <p className="text-muted-foreground">
                –ü—Ä–∏–≤–µ—Ç, <span className="font-semibold text-foreground">{telegramUser?.first_name}</span>!
                –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É...
              </p>
            </div>

            {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏–Ω–Ω–µ—Ä */}
            <div className="flex justify-center py-4">
              <motion.div
                animate={{ rotate: 360 }}
                transition={{ duration: 2, repeat: Infinity, ease: "linear" }}
                className="flex h-12 w-12 items-center justify-center rounded-full border-4 border-primary/20 border-t-primary"
              />
            </div>

            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –±–ª–æ–∫ */}
            <div className="rounded-2xl bg-surface/50 border border-border/40 p-4">
              <p className="text-sm text-muted-foreground">
                üîí –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Telegram Web App
              </p>
            </div>
          </motion.div>
        )}

        {/* –°—Ü–µ–Ω–∞—Ä–∏–π ‚Ññ2: –ú—ã –≤ –æ–±—ã—á–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ (–†–ê–ó–†–ê–ë–û–¢–ö–ê) */}
        {!isTelegramEnv && (
          <motion.div
            initial={{ opacity: 0, scale: 0.9 }}
            animate={{ opacity: 1, scale: 1 }}
            className="space-y-6"
          >
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –¥–µ–≤–µ–ª–æ–ø–µ—Ä—Å–∫–æ–≥–æ –≤—Ö–æ–¥–∞ */}
            <div className="text-center space-y-4">
              <div className="flex justify-center">
                <div className="flex h-16 w-16 items-center justify-center rounded-2xl bg-gradient-to-br from-primary to-primary-glow shadow-lg shadow-primary/25">
                  <span className="text-xl font-bold text-white">L</span>
                </div>
              </div>
              <div className="space-y-2">
                <h1 className="text-2xl font-bold bg-gradient-to-r from-foreground to-muted-foreground bg-clip-text text-transparent">
                  Lucky TON
                </h1>
                <p className="text-muted-foreground">
                  –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∏–≥—Ä–∞–º
                </p>
              </div>
            </div>

            {/* –î–µ–≤–µ–ª–æ–ø–µ—Ä—Å–∫–∞—è —Ñ–æ—Ä–º–∞ –≤—Ö–æ–¥–∞ */}
            <DevLoginForm
              onLoginSubmit={(manualInitData) => mutate(manualInitData)}
              isLoading={isPending}
            />
          </motion.div>
        )}

        {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–∫–∏ –≤—Ö–æ–¥–∞ */}
        {error && (
          <motion.div
            initial={{ opacity: 0, y: 10 }}
            animate={{ opacity: 1, y: 0 }}
            className="mt-4 rounded-xl bg-red-500/10 border border-red-500/20 p-4"
          >
            <p className="text-sm text-red-400 text-center">
              ‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {error.message}
            </p>
          </motion.div>
        )}

        {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
        <div className="absolute -top-20 -right-20 h-40 w-40 rounded-full bg-primary/5 blur-3xl" />
        <div className="absolute -bottom-20 -left-20 h-40 w-40 rounded-full bg-secondary/5 blur-3xl" />
      </motion.div>
    </div>
  );
};